name: Test
on: [push]
jobs:

  check-format:
    name: Check format
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v2
      - run: shopt -s globstar
      - name: clang-format check
        run: clang-format --dry-run --Werror --style=file src/**/*.cpp src/**/*.h

  list-examples:
    needs: check-format
    runs-on: self-hosted
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v2
      - id: set-matrix
        run: echo "::set-output name=matrix::$(find examples -iname "*.c" -exec sh -c 'printf "%s\n" "${0%.*}"' {} ';' | jq -R -s -c 'split("\n")[:-1]')"

  build:
    needs: check-format
    name: Build
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v2
      - run: mkdir build
      - name: Cmake
        working-directory: ./build
        run: cmake ..
      - name: Build
        working-directory: ./build
        run: make
      - uses: actions/upload-artifact@v2
        with:
          name: tcc-exe
          path: build/tcc
          retention-days: 1

  test:
    needs: [list-examples, build]
    name: Test
    runs-on: self-hosted
    strategy:
      matrix:
        example: ${{ fromJson(needs.list-examples.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: tcc-exe
      - run: chmod +x ./tcc
      - name: Translate to IR
        run: ./tcc '${{ matrix.example }}.c'
      - name: Translate to ASM
        run: llc -opaque-pointers '${{ matrix.example }}.ll'
      - name: Compile
        run: gcc '${{ matrix.example }}.s' -o ${{ matrix.example }}
      - name: Run example
        run: ${{ matrix.example }}
