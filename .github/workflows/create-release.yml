name: Create release
on:
  push:
    branches:
      - master
jobs:

  get-version:
    name: Get version
    runs-on: self-hosted
    outputs:
      version-str: ${{ steps.get-master-version.outputs.master-ver }}
      rel-name: ${{ steps.get-release-name.outputs.rel-name  }}
    steps:
      - uses: actions/checkout@v3
      - id: get-master-version
        run: |
          echo "::set-output name=master-ver::$(grep -Ps "^#define TINYC_VERSION.* (\d+)$" src/tcc/version/Version.h | grep -Po "\d+" | xargs | tr ' ' '-')"
      - id: get-release-name
        run: |
          echo "::set-output name=rel-name::$(grep -Ps "^#define TINYC_VERSION.* (\d+)$" src/tcc/version/Version.h | grep -Po "\d+" | xargs | tr ' ' '.' | sed "s/^/v/g")"

  build:
    needs: get-version
    name: Create release
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v3
      - run: mkdir build
      - name: Cmake
        working-directory: ./build
        run: cmake .. -DCMAKE_BUILD_TYPE=Release
      - name: Build
        working-directory: ./build
        run: make
      - run: mkdir tcc-linux && mv ./tcc ./tcc-linux/tcc
        working-directory: ./build
      - name: Make archive
        run: tar -czvf 'tcc-linux-${{needs.get-version.outputs.version-str}}.tar.gz' tcc-linux/
        working-directory: ./build
      - name: Release latest
        id: release-latest
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ needs.get-version.outputs.rel-name }}
          release_name: ${{ needs.get-version.outputs.rel-name }}
          draft: false
          prerelease: false
      - name: Upload release assets
        uses: actions/upload-release-asset@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.release-latest.outputs.upload_url }}
          asset_path: './build/tcc-linux-${{needs.get-version.outputs.version-str}}.tar.gz'
          asset_name: 'tcc-linux-${{needs.get-version.outputs.version-str}}.tar.gz'
          asset_content_type: application/gzip
